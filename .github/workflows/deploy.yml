name: Deploy to GitHub Pages

on:
  workflow_run:
    workflows: ["Top GitHub Users (Daily)"]
    types:
      - completed
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Create static site
        run: |
          mkdir -p _site
          cp -r src/* _site/
          cp -r cache _site/cache
          
          # Fix URLs in HTML files to work with GitHub Pages
          find _site -name "*.html" -exec sed -i 's|{{ url_for('\''static'\'', path='\''|/code-mapper/|g' {} \;
          find _site -name "*.html" -exec sed -i 's|'\'') }}||g' {} \;
          
          # Update JavaScript to use correct paths
          find _site -name "*.js" -exec sed -i 's|/static/|/code-mapper/|g' {} \;
          find _site -name "*.js" -exec sed -i 's|/cache/|/code-mapper/cache/|g' {} \;
          
          # Create index.js for serving static files
          cat > _site/index.js <<EOL
          document.addEventListener('DOMContentLoaded', () => {
            // Redirect API calls to static JSON files
            const originalFetch = window.fetch;
            window.fetch = function(url, options) {
              if (url === '/get_countries') {
                return fetch('/code-mapper/countries.json', options);
              }
              return originalFetch.apply(this, arguments);
            };
          });
          EOL
          
          # Create generate_countries.py script
          cat > generate_countries.py <<EOL
          import os
          import json

          countries = []
          cache_dir = 'cache'

          try:
              json_files = [f for f in os.listdir(cache_dir) if f.endswith('.json')]
              
              for json_file in json_files:
                  country_name = json_file[:-5]  # Remove .json extension
                  formatted_name = ' '.join(word.capitalize() for word in country_name.split('_'))
                  countries.append({
                      'name': formatted_name,
                      'code': '',
                      'region': None
                  })
              
              countries.sort(key=lambda x: x['name'])
              
              with open('_site/countries.json', 'w') as f:
                  json.dump(countries, f)
                  
          except Exception as e:
              print(f'Error creating countries.json: {str(e)}')
              countries = []
              with open('_site/countries.json', 'w') as f:
                  json.dump(countries, f)
          EOL
          
          # Run the script
          python generate_countries.py
          
          # Add script tag to index.html
          sed -i 's|</head>|<script src="/code-mapper/index.js"></script></head>|' _site/index.html
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
          name: github-pages

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          artifact_name: github-pages
